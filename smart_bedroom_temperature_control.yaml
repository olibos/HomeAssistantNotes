blueprint:
  name: Smart Bedroom Temperature Control
  description: >
    Automatically manage bedroom shutter based on inside/outside temperature,
    comfort threshold, sun position, and window state.
  domain: automation
  input:
    bedroom_temp_sensor:
      name: Bedroom Temperature Sensor
      selector:
        entity:
          domain: sensor
          device_class: temperature

    outdoor_temp_sensor:
      name: Outdoor Temperature Sensor
      selector:
        entity:
          domain: sensor
          device_class: temperature

    shutter_cover:
      name: Bedroom Shutter
      selector:
        entity:
          domain: cover

    window_sensor:
      name: (Optional) Window Sensor
      default: []
      selector:
        entity:
          domain: binary_sensor
          device_class: window

    comfort_temp:
      name: Comfort Temperature Threshold
      default: 25
      selector:
        number:
          min: 18
          max: 28
          step: 0.5
          unit_of_measurement: "¬∞C"

    notify_device:
      name: Device to Notify
      selector:
        device:
          integration: mobile_app

    sun_azimuth_min:
      name: (Optional) Sun Azimuth Minimum
      description: Only control shutters if sun azimuth is ‚â• this value
      default: 0
      selector:
        number:
          min: 0
          max: 360
          step: 1
          unit_of_measurement: "¬∞"

    sun_azimuth_max:
      name: (Optional) Sun Azimuth Maximum
      description: Only control shutters if sun azimuth is ‚â§ this value
      default: 360
      selector:
        number:
          min: 0
          max: 360
          step: 1
          unit_of_measurement: "¬∞"

trigger:
  - platform: time_pattern
    minutes: "/15"
  - platform: state
    entity_id: !input bedroom_temp_sensor
  - platform: state
    entity_id: !input outdoor_temp_sensor
  - platform: sun
    event: sunrise
  - platform: sun
    event: sunset

variables:
  bedroom_temp: "{{ states(input.bedroom_temp_sensor) | float(0) }}"
  outside_temp: "{{ states(input.outdoor_temp_sensor) | float(0) }}"
  comfort: !input comfort_temp
  sun_azimuth: "{{ state_attr('sun.sun', 'azimuth') | float(0) }}"
  az_min: !input sun_azimuth_min
  az_max: !input sun_azimuth_max
  is_sun_on_window: >
    {% if az_max > az_min %}
      {{ az_min <= sun_azimuth <= az_max }}
    {% else %}
      {{ sun_azimuth >= az_min or sun_azimuth <= az_max }}
    {% endif %}
  is_window_open: >
    {% if input.window_sensor %}
      {{ is_state(input.window_sensor, 'on') }}
    {% else %}
      false
    {% endif %}

action:
  - choose:

      # üåû Preventive shading
      - conditions:
          - condition: numeric_state
            entity_id: !input bedroom_temp_sensor
            below: !input comfort_temp
          - condition: numeric_state
            entity_id: !input outdoor_temp_sensor
            above: 25
          - condition: sun
            after: sunrise
            before: sunset
          - condition: template
            value_template: "{{ is_sun_on_window }}"
        sequence:
          - service: cover.set_cover_position
            target:
              entity_id: !input shutter_cover
            data:
              position: 20  # Mostly closed

      # ‚ùÑÔ∏è Cool-down opportunity
      - conditions:
          - condition: numeric_state
            entity_id: !input bedroom_temp_sensor
            above: !input comfort_temp
          - condition: template
            value_template: "{{ outside_temp + 1 < bedroom_temp }}"
        sequence:
          - if:
              - condition: template
                value_template: "{{ not is_window_open }}"
            then:
              - service: notify.mobile_app_{{ device_id(input.notify_device) }}
                data:
                  title: "Cool Down Opportunity"
                  message: >
                    Bedroom is {{ bedroom_temp }}¬∞C, but it's only {{ outside_temp }}¬∞C outside.
                    Consider opening the window to cool down naturally.
            else:
              - service: notify.mobile_app_{{ device_id(input.notify_device) }}
                data:
                  title: "Natural Cooling Active"
                  message: >
                    Window is open and outside is cooler ({{ outside_temp }}¬∞C).
                    Let the fresh air in!

mode: restart
